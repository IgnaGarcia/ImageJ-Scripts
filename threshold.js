// Color Thresholder 1.53h
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("RGB Stack");
run("Convert Stack to Images");
selectWindow("Red");
rename("0");
selectWindow("Green");
rename("1");
selectWindow("Blue");
rename("2");
min[0]=50;
max[0]=75;
filter[0]="pass";
min[1]=40;
max[1]=70;
filter[1]="pass";
min[2]=0;
max[2]=20;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Colour Thresholding-------------



/*
    FORK:
    1- Copiar Recortador.js, sin el guardar imagen
    2- Refactorear para que la dimension sea 7x7 o 9x9
    3- Analizar el recorte y guardar el min, media y max de original
    4- Exportar archivo en forma de tabla del siguiente formato:
        | nro recorte | minima | media | maxima |
    5- Tambien analizar el min, media y max del R/G y del RO, exportar del mismo formato?
*/